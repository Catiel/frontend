import React, { useState } from 'react'

export default function GruposYPlanificacion() {
  const [view, setView] = useState('join') // 'join', 'create'
  const [groupCode, setGroupCode] = useState('')
  const [groupData, setGroupData] = useState({ nombre: '', representante: '', logo: null })
  const [showAlert, setShowAlert] = useState(false)
  const [generatedCode, setGeneratedCode] = useState('')

  const handleJoinGroup = () => {
    console.log('Joining group with code:', groupCode)
    // Implement API call to join group
  }

  const handleCreateGroup = () => {
    console.log('Creating group:', groupData)
    setGeneratedCode('ABC123') // This should be generated by the API
    setShowAlert(true)
    setTimeout(() => setShowAlert(false), 3000)
  }

  return (
    <div className="space-y-4">
      <div className="flex space-x-4">
        <button onClick={() => setView('join')} className={`px-4 py-2 rounded ${view === 'join' ? 'bg-purple-600 text-white' : 'bg-purple-200 text-purple-800'}`}>
          Unirse por código
        </button>
        <button onClick={() => setView('create')} className={`px-4 py-2 rounded ${view === 'create' ? 'bg-purple-600 text-white' : 'bg-purple-200 text-purple-800'}`}>
          Crear grupo de trabajo
        </button>
      </div>

      {view === 'join' && (
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h3 className="font-bold text-lg mb-4">Unirse a un grupo</h3>
          <input
            type="text"
            placeholder="Ingrese el código del grupo"
            value={groupCode}
            onChange={(e) => setGroupCode(e.target.value)}
            className="w-full p-2 border rounded mb-4"
          />
          <button onClick={handleJoinGroup} className="w-full bg-purple-600 text-white p-2 rounded">Unirse al grupo</button>
        </div>
      )}

      {view === 'create' && (
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h3 className="font-bold text-lg mb-4">Crear grupo de trabajo</h3>
          <div className="space-y-4">
            <input
              type="text"
              placeholder="Nombre de la empresa"
              value={groupData.nombre}
              onChange={(e) => setGroupData({...groupData, nombre: e.target.value})}
              className="w-full p-2 border rounded"
            />
            <input
              type="text"
              placeholder="Representante legal"
              value={groupData.representante}
              onChange={(e) => setGroupData({...groupData, representante: e.target.value})}
              className="w-full p-2 border rounded"
            />
            <div className="border-2 border-dashed border-gray-300 rounded-lg p-4 text-center">
              <p>Logo de la empresa</p>
              <input
                type="file"
                accept="image/*"
                className="hidden"
                id="logo-upload"
                onChange={(e) => setGroupData({...groupData, logo: e.target.files[0]})}
              />
              <label htmlFor="logo-upload" className="cursor-pointer text-purple-600 hover:text-purple-800">
                Subir imagen
              </label>
            </div>
            <button onClick={handleCreateGroup} className="w-full bg-purple-600 text-white p-2 rounded">Registrar Grupo</button>
          </div>
        </div>
      )}

      {showAlert && (
        <div className="bg-green-100 border-l-4 border-green-500 text-green-700 p-4" role="alert">
          <p className="font-bold">Grupo creado exitosamente</p>
          <p>El código de su grupo es: {generatedCode}</p>
        </div>
      )}
    </div>
  )
}